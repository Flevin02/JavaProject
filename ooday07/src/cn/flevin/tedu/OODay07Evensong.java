package cn.flevin.tedu;
public class OODay07Evensong {
    public static void main(String[] args) {
    }
}

/*
接口:
  1)是一种数据类型(引用数据类型)
  2)由interface定义
  3)只能包含常量和抽象方法
  4)接口不能被实例化
  5)接口是需要被实现/继承的，实现类/派生类:必须重写所有抽象方法
  6)一个类可以实现多个接口，用逗号分隔。若又继承又实现时，应先继承后实现
  7)接口可以继承接口


1.深水炸弹入场：
  1)深水炸弹是由战舰发射出来的，所以在Battleship中设计nextBomb()生成深水炸弹
  2)深水炸弹入场为事件触发的，所以在侦听器中重写keyReleased()键盘弹起事件，
    在keyReleased()中：
       判断若按下的为空格键，则：
        获取深水炸弹对象，bombs扩容，装到最后一个元素上
2.战舰移动：
  1)战舰移动为战舰的行为，所以在Battleship中设计moveLeft()左移、moveRight()右移
  2)战舰移动为事件触发的，所以在侦听器的keyReleased()中：
      判断若按下的为左键头，则调用moveLeft()实现战舰左移
      判断若按下的为右键头，则调用moveRight()实现战舰右移
3.删除越界的对象：
  1)在SeaObject中设计isOutOfBounds()检测潜艇是否越界
    Bomb中重写isOutOfBounds()检测深水炸弹是否越界
    Mine中重写isOutOfBounds()检测水雷是否越界
  2)删除越界对象为定时发生的，所以在run中调用outOfBoundsAction()删除越界对象
    在outOfBoundsAction()中：
      遍历所有潜艇，判断若潜艇越界了，则将越界潜艇替换为最后一个元素，缩容
      遍历所有水雷，判断若水雷越界了，则将越界水雷替换为最后一个元素，缩容
      遍历所有深水炸弹，判断若深水炸弹越界了，则将越界深水炸弹替换为最后一个元素，缩容
4.设计EnemyScore分的接口，ObserveSubmarine和TorpedoSubmarine实现分的接口
  设计EnemyLife命的接口，MineSubmarine实现命的接口
*/




/*
集中问题:
1.接口的好处?------------------明天讲
2.按下左键/右键之后，战舰不动
  -----检查你是否写的是if(e.getKeyCode()==KeyCode.VK_LEFT/VK_RIGHT)
3.为什么删不掉对象?
  -----------检查你的isOutOfBounds()检测越界方法是否正确
  在outOfBoundsAction()中:
  -----------一定要先用最后一个元素将越界对象替换掉，然后再缩容
4.看着我的代码或笔记能写出来，自己独立写就写不出来了---------这是正常的
  ------欠思考、欠练，需要多写、多模仿
  ------做功能对你们的要求是: 能按照我笔记中的步骤写出来就可以
 */

/*
常见面试题:
1.JDK、JRE、JVM的区别:
  1)JDK:java开发工具包，是java的核心，包括:JRE+编译、运行等命令工具
  2)JRE:java运行环境，是运行java程序所必须的环境的集合，包括:JVM+java系统类库
  3)JVM:java虚拟机，是java实现跨平台的最核心部分，能够运行java语言所开发的程序
2.java的8种基本数据类型是什么?(简述java的8种基本数据类型)
  答:8种基本数据类型包括:byte,short,int,long,float,double,boolean,char
    1)byte:字节型，用于存储整数的，占用1个字节，范围-128到127
    2)short:短整型，用于存储整数的，占用2个字节，范围-32768到32767
    3)int:最常用的整型，用于存储整数的，占用4个字节，范围-2^31到2^31-1
    4)long:长整型，用于存储较大的整数，占用8个字节，范围-2^63到2^63-1
    5)float:单精度浮点数，用于存储小数的，占用4个字节，不能表示精确的值
    6)double:双精度浮点数，最常用的存储小数的类型，占用8个字节，不能表示精确的值
    7)boolean:布尔型，存储true或false，占用1个字节
    8)char:字符型，采用Unicode字符编码格式，存储单个字符，占用2个字节
3.switch可以作用于哪些数据类型上？
  答:byte,short,int,char,String,枚举，其余类型都不允许
4.重写与重载的区别:
  1)重写:发生在父子类中，方法名相同，参数列表相同
    ----用于在子类中修改父类中的方法
  2)重载:发生在同一类中，方法名相同，参数列表不同
    ----方法名相同的完全不同的方法
5.实例变量与静态变量的区别:
  ----实例变量和静态变量都属于成员变量
  1)实例变量:是属于对象的，在创建对象时存储在内存堆中，创建多少个对象，则实例变量
            就会在内存堆中存在多少份，需要通过引用变量来访问
  2)静态变量:是属于类的，在类被加载时存储在内存方法区中，无论创建多少个对象，静态
            变量在内存中都只有一份，常常通过类名来访问
6.java是值传递还是引用传递?
  ---java中无论是基本类型还是引用类型，都是值传递
     1)对于基本类型而言，传递的是具体的值的副本
     2)对于引用类型而言，传递的是具体的地址值的副本
     注意:网站上说Java有引用传递的文章都是错误的!!!
     举例:
        int a = 5;
        int b = a; //将a的值5赋值给b(传递的是值的副本--5)
        Student zs = new Student();
        Student zss = zs; //将zs的地址值赋值给zss(传递的是地址值的副本--0x1111)
                          //zss和zs指向了同一个Student对象
7.抽象类与接口的区别:
  1)抽象类:
    1.1)由abstract修饰
    1.2)可以包含变量、常量、构造方法、普通方法、静态方法、抽象方法
    1.3)派生类通过extends来继承
    1.4)只能继承一个(体现单一继承)
    1.5)抽象类中的成员是任何访问权限都可以(默认为默认权限(同包中的))
  2)接口:
    2.1)由interface定义
    2.2)只能包含常量、抽象方法
    2.3)实现类通过implements来实现
    2.4)可以实现多个(体现多实现)
    2.5)接口中的成员的访问权限只能是public(默认为public权限)
 */


/*
补充:
  class Aoo{
     private Aoo(){
     }
  }
  class Test{
    public static void main(String[] args){
      Aoo o = new Aoo();
    }
  }
 */


















